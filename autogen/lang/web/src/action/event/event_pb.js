// source: src/action/event/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var src_action_crud_api_pb = require('../../action/crud/api_pb.js');
goog.object.extend(proto, src_action_crud_api_pb);
goog.exportSymbol('proto.action.event.v1.Event', null, global);
goog.exportSymbol('proto.action.event.v1.EventType', null, global);
goog.exportSymbol('proto.action.event.v1.ExecuteJobData', null, global);
goog.exportSymbol('proto.action.event.v1.JobStatusChangeData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.action.event.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.action.event.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.action.event.v1.Event.displayName = 'proto.action.event.v1.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.action.event.v1.ExecuteJobData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.action.event.v1.ExecuteJobData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.action.event.v1.ExecuteJobData.displayName = 'proto.action.event.v1.ExecuteJobData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.action.event.v1.JobStatusChangeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.action.event.v1.JobStatusChangeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.action.event.v1.JobStatusChangeData.displayName = 'proto.action.event.v1.JobStatusChangeData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.action.event.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.action.event.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.action.event.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    data: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.action.event.v1.Event}
 */
proto.action.event.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.action.event.v1.Event;
  return proto.action.event.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.action.event.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.action.event.v1.Event}
 */
proto.action.event.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {!proto.action.event.v1.EventType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.action.event.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.action.event.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.action.event.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.action.event.v1.Event.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.action.event.v1.Event} returns this
 */
proto.action.event.v1.Event.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EventType type = 2;
 * @return {!proto.action.event.v1.EventType}
 */
proto.action.event.v1.Event.prototype.getType = function() {
  return /** @type {!proto.action.event.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.action.event.v1.EventType} value
 * @return {!proto.action.event.v1.Event} returns this
 */
proto.action.event.v1.Event.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string data = 3;
 * @return {string}
 */
proto.action.event.v1.Event.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.action.event.v1.Event} returns this
 */
proto.action.event.v1.Event.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.action.event.v1.ExecuteJobData.prototype.toObject = function(opt_includeInstance) {
  return proto.action.event.v1.ExecuteJobData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.action.event.v1.ExecuteJobData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.ExecuteJobData.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && src_action_crud_api_pb.Job.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.action.event.v1.ExecuteJobData}
 */
proto.action.event.v1.ExecuteJobData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.action.event.v1.ExecuteJobData;
  return proto.action.event.v1.ExecuteJobData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.action.event.v1.ExecuteJobData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.action.event.v1.ExecuteJobData}
 */
proto.action.event.v1.ExecuteJobData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_action_crud_api_pb.Job;
      reader.readMessage(value,src_action_crud_api_pb.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.action.event.v1.ExecuteJobData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.action.event.v1.ExecuteJobData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.action.event.v1.ExecuteJobData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.ExecuteJobData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      src_action_crud_api_pb.Job.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional action.crud.v1.Job job = 1;
 * @return {?proto.action.crud.v1.Job}
 */
proto.action.event.v1.ExecuteJobData.prototype.getJob = function() {
  return /** @type{?proto.action.crud.v1.Job} */ (
    jspb.Message.getWrapperField(this, src_action_crud_api_pb.Job, 1));
};


/**
 * @param {?proto.action.crud.v1.Job|undefined} value
 * @return {!proto.action.event.v1.ExecuteJobData} returns this
*/
proto.action.event.v1.ExecuteJobData.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.action.event.v1.ExecuteJobData} returns this
 */
proto.action.event.v1.ExecuteJobData.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.action.event.v1.ExecuteJobData.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string actionId = 2;
 * @return {string}
 */
proto.action.event.v1.ExecuteJobData.prototype.getActionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.action.event.v1.ExecuteJobData} returns this
 */
proto.action.event.v1.ExecuteJobData.prototype.setActionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.action.event.v1.JobStatusChangeData.prototype.toObject = function(opt_includeInstance) {
  return proto.action.event.v1.JobStatusChangeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.action.event.v1.JobStatusChangeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.JobStatusChangeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldjob: (f = msg.getOldjob()) && src_action_crud_api_pb.Job.toObject(includeInstance, f),
    newjob: (f = msg.getNewjob()) && src_action_crud_api_pb.Job.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.action.event.v1.JobStatusChangeData}
 */
proto.action.event.v1.JobStatusChangeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.action.event.v1.JobStatusChangeData;
  return proto.action.event.v1.JobStatusChangeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.action.event.v1.JobStatusChangeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.action.event.v1.JobStatusChangeData}
 */
proto.action.event.v1.JobStatusChangeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_action_crud_api_pb.Job;
      reader.readMessage(value,src_action_crud_api_pb.Job.deserializeBinaryFromReader);
      msg.setOldjob(value);
      break;
    case 2:
      var value = new src_action_crud_api_pb.Job;
      reader.readMessage(value,src_action_crud_api_pb.Job.deserializeBinaryFromReader);
      msg.setNewjob(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.action.event.v1.JobStatusChangeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.action.event.v1.JobStatusChangeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.action.event.v1.JobStatusChangeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.action.event.v1.JobStatusChangeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldjob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      src_action_crud_api_pb.Job.serializeBinaryToWriter
    );
  }
  f = message.getNewjob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      src_action_crud_api_pb.Job.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional action.crud.v1.Job oldJob = 1;
 * @return {?proto.action.crud.v1.Job}
 */
proto.action.event.v1.JobStatusChangeData.prototype.getOldjob = function() {
  return /** @type{?proto.action.crud.v1.Job} */ (
    jspb.Message.getWrapperField(this, src_action_crud_api_pb.Job, 1));
};


/**
 * @param {?proto.action.crud.v1.Job|undefined} value
 * @return {!proto.action.event.v1.JobStatusChangeData} returns this
*/
proto.action.event.v1.JobStatusChangeData.prototype.setOldjob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.action.event.v1.JobStatusChangeData} returns this
 */
proto.action.event.v1.JobStatusChangeData.prototype.clearOldjob = function() {
  return this.setOldjob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.action.event.v1.JobStatusChangeData.prototype.hasOldjob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional action.crud.v1.Job newJob = 2;
 * @return {?proto.action.crud.v1.Job}
 */
proto.action.event.v1.JobStatusChangeData.prototype.getNewjob = function() {
  return /** @type{?proto.action.crud.v1.Job} */ (
    jspb.Message.getWrapperField(this, src_action_crud_api_pb.Job, 2));
};


/**
 * @param {?proto.action.crud.v1.Job|undefined} value
 * @return {!proto.action.event.v1.JobStatusChangeData} returns this
*/
proto.action.event.v1.JobStatusChangeData.prototype.setNewjob = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.action.event.v1.JobStatusChangeData} returns this
 */
proto.action.event.v1.JobStatusChangeData.prototype.clearNewjob = function() {
  return this.setNewjob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.action.event.v1.JobStatusChangeData.prototype.hasNewjob = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string actionId = 3;
 * @return {string}
 */
proto.action.event.v1.JobStatusChangeData.prototype.getActionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.action.event.v1.JobStatusChangeData} returns this
 */
proto.action.event.v1.JobStatusChangeData.prototype.setActionid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.action.event.v1.EventType = {
  UNKNOWN_EVENT_TYPE: 0,
  EXECUTE_JOB: 1,
  JOB_STATUS_CHANGE: 2
};

goog.object.extend(exports, proto.action.event.v1);
