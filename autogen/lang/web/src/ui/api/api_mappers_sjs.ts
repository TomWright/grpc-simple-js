// File auto-generated by protoc-gen-simple-ts
import * as api_pb from './api_pb'
import * as ui_api_v1_types from './api_types_sjs'
import * as ui_api_v1_mappers from './api_mappers_sjs'
import * as ui_crud_v1_types from '../crud/api_types_sjs'
import * as ui_crud_v1_mappers from '../crud/api_mappers_sjs'
import * as platform_v1_query_types from '../../platform/query/match_strategy_types_sjs'
import * as platform_v1_query_mappers from '../../platform/query/match_strategy_mappers_sjs'


export const mapNewResourceRequestToGrpcWeb = (input?: ui_api_v1_types.NewResourceRequest): api_pb.NewResourceRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewResourceRequest()
	const tmpResource = ui_crud_v1_mappers.mapResourceToGrpcWeb(input?.resource);
    if (tmpResource !== undefined) result.setResource(tmpResource)
	return result
}

export const mapNewResourceRequestFromGrpcWeb = (input?: api_pb.NewResourceRequest): ui_api_v1_types.NewResourceRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewResourceRequest = {
        resource: ui_crud_v1_mappers.mapResourceFromGrpcWeb(input.getResource()),
	}
	return result
}

export const mapGetResourceRequestToGrpcWeb = (input?: ui_api_v1_types.GetResourceRequest): api_pb.GetResourceRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetResourceRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetResourceRequestFromGrpcWeb = (input?: api_pb.GetResourceRequest): ui_api_v1_types.GetResourceRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetResourceRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutResourceRequestToGrpcWeb = (input?: ui_api_v1_types.PutResourceRequest): api_pb.PutResourceRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutResourceRequest()
	const tmpResource = ui_crud_v1_mappers.mapResourceToGrpcWeb(input?.resource);
    if (tmpResource !== undefined) result.setResource(tmpResource)
	return result
}

export const mapPutResourceRequestFromGrpcWeb = (input?: api_pb.PutResourceRequest): ui_api_v1_types.PutResourceRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutResourceRequest = {
        resource: ui_crud_v1_mappers.mapResourceFromGrpcWeb(input.getResource()),
	}
	return result
}

export const mapDelResourceRequestToGrpcWeb = (input?: ui_api_v1_types.DelResourceRequest): api_pb.DelResourceRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelResourceRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelResourceRequestFromGrpcWeb = (input?: api_pb.DelResourceRequest): ui_api_v1_types.DelResourceRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelResourceRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetResourcesRequestToGrpcWeb = (input?: ui_api_v1_types.GetResourcesRequest): api_pb.GetResourcesRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetResourcesRequest()
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.resource !== undefined) result.setResource(input.resource)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	const tmpDatasource = ui_crud_v1_mappers.mapResource_DatasourceToGrpcWeb(input?.datasource);
    if (tmpDatasource !== undefined) result.setDatasource(tmpDatasource)
	const tmpDatasourceParamsCustom = ui_crud_v1_mappers.mapDatasourceParamsCustomToGrpcWeb(input?.datasourceParamsCustom);
    if (tmpDatasourceParamsCustom !== undefined) result.setDatasourceparamscustom(tmpDatasourceParamsCustom)
	const tmpDatasourceParamsElasticsearch = ui_crud_v1_mappers.mapDatasourceParamsElasticSearchToGrpcWeb(input?.datasourceParamsElasticsearch);
    if (tmpDatasourceParamsElasticsearch !== undefined) result.setDatasourceparamselasticsearch(tmpDatasourceParamsElasticsearch)
	const tmpDatasourceParamsGraphql = ui_crud_v1_mappers.mapDatasourceParamsGraphQLToGrpcWeb(input?.datasourceParamsGraphql);
    if (tmpDatasourceParamsGraphql !== undefined) result.setDatasourceparamsgraphql(tmpDatasourceParamsGraphql)
	return result
}

export const mapGetResourcesRequestFromGrpcWeb = (input?: api_pb.GetResourcesRequest): ui_api_v1_types.GetResourcesRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetResourcesRequest = {
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        resource: input.getResource(),
        limit: input.getLimit(),
        datasource: ui_crud_v1_mappers.mapResource_DatasourceFromGrpcWeb(input.getDatasource()),
        datasourceParamsCustom: ui_crud_v1_mappers.mapDatasourceParamsCustomFromGrpcWeb(input.getDatasourceparamscustom()),
        datasourceParamsElasticsearch: ui_crud_v1_mappers.mapDatasourceParamsElasticSearchFromGrpcWeb(input.getDatasourceparamselasticsearch()),
        datasourceParamsGraphql: ui_crud_v1_mappers.mapDatasourceParamsGraphQLFromGrpcWeb(input.getDatasourceparamsgraphql()),
	}
	return result
}

export const mapGetResourcesResponseToGrpcWeb = (input?: ui_api_v1_types.GetResourcesResponse): api_pb.GetResourcesResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetResourcesResponse()
	if (input?.resources !== undefined) {
		input.resources.forEach((x: ui_crud_v1_types.Resource, i: number) => {
			result.addResources(ui_crud_v1_mappers.mapResourceToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetResourcesResponseFromGrpcWeb = (input?: api_pb.GetResourcesResponse): ui_api_v1_types.GetResourcesResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetResourcesResponse = {

	}
    const resourcesList: Array<ui_crud_v1_types.Resource> = []
	input.getResourcesList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapResourceFromGrpcWeb(x)
		if (val !== undefined) resourcesList.push(val)
	})
	result.resources = resourcesList

	return result
}

export const mapNewListRequestToGrpcWeb = (input?: ui_api_v1_types.NewListRequest): api_pb.NewListRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewListRequest()
	const tmpList = ui_crud_v1_mappers.mapListToGrpcWeb(input?.list);
    if (tmpList !== undefined) result.setList(tmpList)
	return result
}

export const mapNewListRequestFromGrpcWeb = (input?: api_pb.NewListRequest): ui_api_v1_types.NewListRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewListRequest = {
        list: ui_crud_v1_mappers.mapListFromGrpcWeb(input.getList()),
	}
	return result
}

export const mapGetListRequestToGrpcWeb = (input?: ui_api_v1_types.GetListRequest): api_pb.GetListRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetListRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetListRequestFromGrpcWeb = (input?: api_pb.GetListRequest): ui_api_v1_types.GetListRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetListRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutListRequestToGrpcWeb = (input?: ui_api_v1_types.PutListRequest): api_pb.PutListRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutListRequest()
	const tmpList = ui_crud_v1_mappers.mapListToGrpcWeb(input?.list);
    if (tmpList !== undefined) result.setList(tmpList)
	return result
}

export const mapPutListRequestFromGrpcWeb = (input?: api_pb.PutListRequest): ui_api_v1_types.PutListRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutListRequest = {
        list: ui_crud_v1_mappers.mapListFromGrpcWeb(input.getList()),
	}
	return result
}

export const mapDelListRequestToGrpcWeb = (input?: ui_api_v1_types.DelListRequest): api_pb.DelListRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelListRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelListRequestFromGrpcWeb = (input?: api_pb.DelListRequest): ui_api_v1_types.DelListRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelListRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetListsRequestToGrpcWeb = (input?: ui_api_v1_types.GetListsRequest): api_pb.GetListsRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetListsRequest()
	const tmpResourceId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.resourceId);
    if (tmpResourceId !== undefined) result.setResourceid(tmpResourceId)
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	return result
}

export const mapGetListsRequestFromGrpcWeb = (input?: api_pb.GetListsRequest): ui_api_v1_types.GetListsRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetListsRequest = {
        resourceId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getResourceid()),
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        limit: input.getLimit(),
	}
	return result
}

export const mapGetListsResponseToGrpcWeb = (input?: ui_api_v1_types.GetListsResponse): api_pb.GetListsResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetListsResponse()
	if (input?.lists !== undefined) {
		input.lists.forEach((x: ui_crud_v1_types.List, i: number) => {
			result.addLists(ui_crud_v1_mappers.mapListToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetListsResponseFromGrpcWeb = (input?: api_pb.GetListsResponse): ui_api_v1_types.GetListsResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetListsResponse = {

	}
    const listsList: Array<ui_crud_v1_types.List> = []
	input.getListsList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapListFromGrpcWeb(x)
		if (val !== undefined) listsList.push(val)
	})
	result.lists = listsList

	return result
}

export const mapNewFilterRequestToGrpcWeb = (input?: ui_api_v1_types.NewFilterRequest): api_pb.NewFilterRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewFilterRequest()
	const tmpFilter = ui_crud_v1_mappers.mapFilterToGrpcWeb(input?.filter);
    if (tmpFilter !== undefined) result.setFilter(tmpFilter)
	return result
}

export const mapNewFilterRequestFromGrpcWeb = (input?: api_pb.NewFilterRequest): ui_api_v1_types.NewFilterRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewFilterRequest = {
        filter: ui_crud_v1_mappers.mapFilterFromGrpcWeb(input.getFilter()),
	}
	return result
}

export const mapGetFilterRequestToGrpcWeb = (input?: ui_api_v1_types.GetFilterRequest): api_pb.GetFilterRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetFilterRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetFilterRequestFromGrpcWeb = (input?: api_pb.GetFilterRequest): ui_api_v1_types.GetFilterRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetFilterRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutFilterRequestToGrpcWeb = (input?: ui_api_v1_types.PutFilterRequest): api_pb.PutFilterRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutFilterRequest()
	const tmpFilter = ui_crud_v1_mappers.mapFilterToGrpcWeb(input?.filter);
    if (tmpFilter !== undefined) result.setFilter(tmpFilter)
	return result
}

export const mapPutFilterRequestFromGrpcWeb = (input?: api_pb.PutFilterRequest): ui_api_v1_types.PutFilterRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutFilterRequest = {
        filter: ui_crud_v1_mappers.mapFilterFromGrpcWeb(input.getFilter()),
	}
	return result
}

export const mapDelFilterRequestToGrpcWeb = (input?: ui_api_v1_types.DelFilterRequest): api_pb.DelFilterRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelFilterRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelFilterRequestFromGrpcWeb = (input?: api_pb.DelFilterRequest): ui_api_v1_types.DelFilterRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelFilterRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetFiltersRequestToGrpcWeb = (input?: ui_api_v1_types.GetFiltersRequest): api_pb.GetFiltersRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetFiltersRequest()
	const tmpResourceId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.resourceId);
    if (tmpResourceId !== undefined) result.setResourceid(tmpResourceId)
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	return result
}

export const mapGetFiltersRequestFromGrpcWeb = (input?: api_pb.GetFiltersRequest): ui_api_v1_types.GetFiltersRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetFiltersRequest = {
        resourceId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getResourceid()),
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        limit: input.getLimit(),
	}
	return result
}

export const mapGetFiltersResponseToGrpcWeb = (input?: ui_api_v1_types.GetFiltersResponse): api_pb.GetFiltersResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetFiltersResponse()
	if (input?.filters !== undefined) {
		input.filters.forEach((x: ui_crud_v1_types.Filter, i: number) => {
			result.addFilters(ui_crud_v1_mappers.mapFilterToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetFiltersResponseFromGrpcWeb = (input?: api_pb.GetFiltersResponse): ui_api_v1_types.GetFiltersResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetFiltersResponse = {

	}
    const filtersList: Array<ui_crud_v1_types.Filter> = []
	input.getFiltersList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapFilterFromGrpcWeb(x)
		if (val !== undefined) filtersList.push(val)
	})
	result.filters = filtersList

	return result
}

export const mapNewPageRequestToGrpcWeb = (input?: ui_api_v1_types.NewPageRequest): api_pb.NewPageRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewPageRequest()
	const tmpPage = ui_crud_v1_mappers.mapPageToGrpcWeb(input?.page);
    if (tmpPage !== undefined) result.setPage(tmpPage)
	return result
}

export const mapNewPageRequestFromGrpcWeb = (input?: api_pb.NewPageRequest): ui_api_v1_types.NewPageRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewPageRequest = {
        page: ui_crud_v1_mappers.mapPageFromGrpcWeb(input.getPage()),
	}
	return result
}

export const mapGetPageRequestToGrpcWeb = (input?: ui_api_v1_types.GetPageRequest): api_pb.GetPageRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetPageRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetPageRequestFromGrpcWeb = (input?: api_pb.GetPageRequest): ui_api_v1_types.GetPageRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPageRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutPageRequestToGrpcWeb = (input?: ui_api_v1_types.PutPageRequest): api_pb.PutPageRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutPageRequest()
	const tmpPage = ui_crud_v1_mappers.mapPageToGrpcWeb(input?.page);
    if (tmpPage !== undefined) result.setPage(tmpPage)
	return result
}

export const mapPutPageRequestFromGrpcWeb = (input?: api_pb.PutPageRequest): ui_api_v1_types.PutPageRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutPageRequest = {
        page: ui_crud_v1_mappers.mapPageFromGrpcWeb(input.getPage()),
	}
	return result
}

export const mapDelPageRequestToGrpcWeb = (input?: ui_api_v1_types.DelPageRequest): api_pb.DelPageRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelPageRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelPageRequestFromGrpcWeb = (input?: api_pb.DelPageRequest): ui_api_v1_types.DelPageRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelPageRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetPagesRequestToGrpcWeb = (input?: ui_api_v1_types.GetPagesRequest): api_pb.GetPagesRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetPagesRequest()
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	if (input?.slug !== undefined) result.setSlug(input.slug)
	return result
}

export const mapGetPagesRequestFromGrpcWeb = (input?: api_pb.GetPagesRequest): ui_api_v1_types.GetPagesRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPagesRequest = {
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        limit: input.getLimit(),
        slug: input.getSlug(),
	}
	return result
}

export const mapGetPagesResponseToGrpcWeb = (input?: ui_api_v1_types.GetPagesResponse): api_pb.GetPagesResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetPagesResponse()
	if (input?.pages !== undefined) {
		input.pages.forEach((x: ui_crud_v1_types.Page, i: number) => {
			result.addPages(ui_crud_v1_mappers.mapPageToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetPagesResponseFromGrpcWeb = (input?: api_pb.GetPagesResponse): ui_api_v1_types.GetPagesResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPagesResponse = {

	}
    const pagesList: Array<ui_crud_v1_types.Page> = []
	input.getPagesList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapPageFromGrpcWeb(x)
		if (val !== undefined) pagesList.push(val)
	})
	result.pages = pagesList

	return result
}

export const mapNewViewRequestToGrpcWeb = (input?: ui_api_v1_types.NewViewRequest): api_pb.NewViewRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewViewRequest()
	const tmpView = ui_crud_v1_mappers.mapViewToGrpcWeb(input?.view);
    if (tmpView !== undefined) result.setView(tmpView)
	return result
}

export const mapNewViewRequestFromGrpcWeb = (input?: api_pb.NewViewRequest): ui_api_v1_types.NewViewRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewViewRequest = {
        view: ui_crud_v1_mappers.mapViewFromGrpcWeb(input.getView()),
	}
	return result
}

export const mapGetViewRequestToGrpcWeb = (input?: ui_api_v1_types.GetViewRequest): api_pb.GetViewRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetViewRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetViewRequestFromGrpcWeb = (input?: api_pb.GetViewRequest): ui_api_v1_types.GetViewRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutViewRequestToGrpcWeb = (input?: ui_api_v1_types.PutViewRequest): api_pb.PutViewRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutViewRequest()
	const tmpView = ui_crud_v1_mappers.mapViewToGrpcWeb(input?.view);
    if (tmpView !== undefined) result.setView(tmpView)
	return result
}

export const mapPutViewRequestFromGrpcWeb = (input?: api_pb.PutViewRequest): ui_api_v1_types.PutViewRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutViewRequest = {
        view: ui_crud_v1_mappers.mapViewFromGrpcWeb(input.getView()),
	}
	return result
}

export const mapDelViewRequestToGrpcWeb = (input?: ui_api_v1_types.DelViewRequest): api_pb.DelViewRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelViewRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelViewRequestFromGrpcWeb = (input?: api_pb.DelViewRequest): ui_api_v1_types.DelViewRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelViewRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetViewsRequestToGrpcWeb = (input?: ui_api_v1_types.GetViewsRequest): api_pb.GetViewsRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetViewsRequest()
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	return result
}

export const mapGetViewsRequestFromGrpcWeb = (input?: api_pb.GetViewsRequest): ui_api_v1_types.GetViewsRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewsRequest = {
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        limit: input.getLimit(),
	}
	return result
}

export const mapGetViewsResponseToGrpcWeb = (input?: ui_api_v1_types.GetViewsResponse): api_pb.GetViewsResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetViewsResponse()
	if (input?.views !== undefined) {
		input.views.forEach((x: ui_crud_v1_types.View, i: number) => {
			result.addViews(ui_crud_v1_mappers.mapViewToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetViewsResponseFromGrpcWeb = (input?: api_pb.GetViewsResponse): ui_api_v1_types.GetViewsResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewsResponse = {

	}
    const viewsList: Array<ui_crud_v1_types.View> = []
	input.getViewsList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapViewFromGrpcWeb(x)
		if (val !== undefined) viewsList.push(val)
	})
	result.views = viewsList

	return result
}

export const mapNewPluginRequestToGrpcWeb = (input?: ui_api_v1_types.NewPluginRequest): api_pb.NewPluginRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewPluginRequest()
	const tmpPlugin = ui_crud_v1_mappers.mapPluginToGrpcWeb(input?.plugin);
    if (tmpPlugin !== undefined) result.setPlugin(tmpPlugin)
	return result
}

export const mapNewPluginRequestFromGrpcWeb = (input?: api_pb.NewPluginRequest): ui_api_v1_types.NewPluginRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewPluginRequest = {
        plugin: ui_crud_v1_mappers.mapPluginFromGrpcWeb(input.getPlugin()),
	}
	return result
}

export const mapGetPluginRequestToGrpcWeb = (input?: ui_api_v1_types.GetPluginRequest): api_pb.GetPluginRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetPluginRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetPluginRequestFromGrpcWeb = (input?: api_pb.GetPluginRequest): ui_api_v1_types.GetPluginRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPluginRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutPluginRequestToGrpcWeb = (input?: ui_api_v1_types.PutPluginRequest): api_pb.PutPluginRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutPluginRequest()
	const tmpPlugin = ui_crud_v1_mappers.mapPluginToGrpcWeb(input?.plugin);
    if (tmpPlugin !== undefined) result.setPlugin(tmpPlugin)
	return result
}

export const mapPutPluginRequestFromGrpcWeb = (input?: api_pb.PutPluginRequest): ui_api_v1_types.PutPluginRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutPluginRequest = {
        plugin: ui_crud_v1_mappers.mapPluginFromGrpcWeb(input.getPlugin()),
	}
	return result
}

export const mapDelPluginRequestToGrpcWeb = (input?: ui_api_v1_types.DelPluginRequest): api_pb.DelPluginRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelPluginRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelPluginRequestFromGrpcWeb = (input?: api_pb.DelPluginRequest): ui_api_v1_types.DelPluginRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelPluginRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetPluginsRequestToGrpcWeb = (input?: ui_api_v1_types.GetPluginsRequest): api_pb.GetPluginsRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetPluginsRequest()
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	return result
}

export const mapGetPluginsRequestFromGrpcWeb = (input?: api_pb.GetPluginsRequest): ui_api_v1_types.GetPluginsRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPluginsRequest = {
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        limit: input.getLimit(),
	}
	return result
}

export const mapGetPluginsResponseToGrpcWeb = (input?: ui_api_v1_types.GetPluginsResponse): api_pb.GetPluginsResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetPluginsResponse()
	if (input?.plugins !== undefined) {
		input.plugins.forEach((x: ui_crud_v1_types.Plugin, i: number) => {
			result.addPlugins(ui_crud_v1_mappers.mapPluginToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetPluginsResponseFromGrpcWeb = (input?: api_pb.GetPluginsResponse): ui_api_v1_types.GetPluginsResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetPluginsResponse = {

	}
    const pluginsList: Array<ui_crud_v1_types.Plugin> = []
	input.getPluginsList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapPluginFromGrpcWeb(x)
		if (val !== undefined) pluginsList.push(val)
	})
	result.plugins = pluginsList

	return result
}

export const mapGetUIRequestToGrpcWeb = (input?: ui_api_v1_types.GetUIRequest): api_pb.GetUIRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetUIRequest()
	if (input?.userId !== undefined) result.setUserid(input.userId)
	if (input?.tenantId !== undefined) result.setTenantid(input.tenantId)
	if (input?.domainId !== undefined) result.setDomainid(input.domainId)
	if (input?.slug !== undefined) result.setSlug(input.slug)
	if (input?.viewId !== undefined) result.setViewid(input.viewId)
	return result
}

export const mapGetUIRequestFromGrpcWeb = (input?: api_pb.GetUIRequest): ui_api_v1_types.GetUIRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetUIRequest = {
        userId: input.getUserid(),
        tenantId: input.getTenantid(),
        domainId: input.getDomainid(),
        slug: input.getSlug(),
        viewId: input.getViewid(),
	}
	return result
}

export const mapGetUIResponseToGrpcWeb = (input?: ui_api_v1_types.GetUIResponse): api_pb.GetUIResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetUIResponse()
	const tmpPage = ui_crud_v1_mappers.mapPageToGrpcWeb(input?.page);
    if (tmpPage !== undefined) result.setPage(tmpPage)
	if (input?.views !== undefined) input.views.forEach(x => { result.getViewsMap().set(x.key, ui_crud_v1_mappers.mapViewToGrpcWeb(x.value)) })
	if (input?.plugins !== undefined) input.plugins.forEach(x => { result.getPluginsMap().set(x.key, ui_crud_v1_mappers.mapPluginToGrpcWeb(x.value)) })
	if (input?.viewOverridesByView !== undefined) input.viewOverridesByView.forEach(x => { result.getViewoverridesbyviewMap().set(x.key, mapRepeatedViewOverrideToGrpcWeb(x.value)) })
	return result
}

export const mapGetUIResponseFromGrpcWeb = (input?: api_pb.GetUIResponse): ui_api_v1_types.GetUIResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetUIResponse = {
        page: ui_crud_v1_mappers.mapPageFromGrpcWeb(input.getPage()),
        views: [],
        plugins: [],
        viewOverridesByView: [],
	}
    input.getViewsMap().forEach((_:any, k: string) => { result.views!.push({key: k, value: ui_crud_v1_mappers.mapViewFromGrpcWeb(input.getViewsMap().get(k))}) })

    input.getPluginsMap().forEach((_:any, k: string) => { result.plugins!.push({key: k, value: ui_crud_v1_mappers.mapPluginFromGrpcWeb(input.getPluginsMap().get(k))}) })

    input.getViewoverridesbyviewMap().forEach((_:any, k: string) => { result.viewOverridesByView!.push({key: k, value: mapRepeatedViewOverrideFromGrpcWeb(input.getViewoverridesbyviewMap().get(k))}) })

	return result
}

export const mapRepeatedViewOverrideToGrpcWeb = (input?: ui_api_v1_types.RepeatedViewOverride): api_pb.RepeatedViewOverride | undefined => {
	if (!input) return
	const result = new api_pb.RepeatedViewOverride()
	if (input?.viewOverrides !== undefined) {
		input.viewOverrides.forEach((x: ui_crud_v1_types.ViewOverride, i: number) => {
			result.addViewoverrides(ui_crud_v1_mappers.mapViewOverrideToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapRepeatedViewOverrideFromGrpcWeb = (input?: api_pb.RepeatedViewOverride): ui_api_v1_types.RepeatedViewOverride | undefined => {
	if (!input) return
	const result: ui_api_v1_types.RepeatedViewOverride = {

	}
    const viewOverridesList: Array<ui_crud_v1_types.ViewOverride> = []
	input.getViewoverridesList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapViewOverrideFromGrpcWeb(x)
		if (val !== undefined) viewOverridesList.push(val)
	})
	result.viewOverrides = viewOverridesList

	return result
}

export const mapInitiateSchemaSyncRequestToGrpcWeb = (input?: ui_api_v1_types.InitiateSchemaSyncRequest): api_pb.InitiateSchemaSyncRequest | undefined => {
	if (!input) return
	const result = new api_pb.InitiateSchemaSyncRequest()
	const tmpChange = mapSchemaChangeTypeToGrpcWeb(input?.change);
    if (tmpChange !== undefined) result.setChange(tmpChange)
	if (input?.schema !== undefined) result.setSchema(input.schema)
	if (input?.tenantId !== undefined) result.setTenantid(input.tenantId)
	return result
}

export const mapInitiateSchemaSyncRequestFromGrpcWeb = (input?: api_pb.InitiateSchemaSyncRequest): ui_api_v1_types.InitiateSchemaSyncRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.InitiateSchemaSyncRequest = {
        change: mapSchemaChangeTypeFromGrpcWeb(input.getChange()),
        schema: input.getSchema(),
        tenantId: input.getTenantid(),
	}
	return result
}

export const mapInitiateSchemaSyncResponseToGrpcWeb = (input?: ui_api_v1_types.InitiateSchemaSyncResponse): api_pb.InitiateSchemaSyncResponse | undefined => {
	if (!input) return
	const result = new api_pb.InitiateSchemaSyncResponse()
	if (input?.resourceId !== undefined) result.setResourceid(input.resourceId)
	if (input?.listId !== undefined) result.setListid(input.listId)
	if (input?.filterId !== undefined) result.setFilterid(input.filterId)
	if (input?.pageId !== undefined) result.setPageid(input.pageId)
	if (input?.viewId !== undefined) result.setViewid(input.viewId)
	return result
}

export const mapInitiateSchemaSyncResponseFromGrpcWeb = (input?: api_pb.InitiateSchemaSyncResponse): ui_api_v1_types.InitiateSchemaSyncResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.InitiateSchemaSyncResponse = {
        resourceId: input.getResourceid(),
        listId: input.getListid(),
        filterId: input.getFilterid(),
        pageId: input.getPageid(),
        viewId: input.getViewid(),
	}
	return result
}

export const mapNewViewOverrideRequestToGrpcWeb = (input?: ui_api_v1_types.NewViewOverrideRequest): api_pb.NewViewOverrideRequest | undefined => {
	if (!input) return
	const result = new api_pb.NewViewOverrideRequest()
	const tmpViewOverride = ui_crud_v1_mappers.mapViewOverrideToGrpcWeb(input?.viewOverride);
    if (tmpViewOverride !== undefined) result.setViewoverride(tmpViewOverride)
	return result
}

export const mapNewViewOverrideRequestFromGrpcWeb = (input?: api_pb.NewViewOverrideRequest): ui_api_v1_types.NewViewOverrideRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.NewViewOverrideRequest = {
        viewOverride: ui_crud_v1_mappers.mapViewOverrideFromGrpcWeb(input.getViewoverride()),
	}
	return result
}

export const mapGetViewOverrideRequestToGrpcWeb = (input?: ui_api_v1_types.GetViewOverrideRequest): api_pb.GetViewOverrideRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetViewOverrideRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapGetViewOverrideRequestFromGrpcWeb = (input?: api_pb.GetViewOverrideRequest): ui_api_v1_types.GetViewOverrideRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewOverrideRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapPutViewOverrideRequestToGrpcWeb = (input?: ui_api_v1_types.PutViewOverrideRequest): api_pb.PutViewOverrideRequest | undefined => {
	if (!input) return
	const result = new api_pb.PutViewOverrideRequest()
	const tmpViewOverride = ui_crud_v1_mappers.mapViewOverrideToGrpcWeb(input?.viewOverride);
    if (tmpViewOverride !== undefined) result.setViewoverride(tmpViewOverride)
	return result
}

export const mapPutViewOverrideRequestFromGrpcWeb = (input?: api_pb.PutViewOverrideRequest): ui_api_v1_types.PutViewOverrideRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.PutViewOverrideRequest = {
        viewOverride: ui_crud_v1_mappers.mapViewOverrideFromGrpcWeb(input.getViewoverride()),
	}
	return result
}

export const mapDelViewOverrideRequestToGrpcWeb = (input?: ui_api_v1_types.DelViewOverrideRequest): api_pb.DelViewOverrideRequest | undefined => {
	if (!input) return
	const result = new api_pb.DelViewOverrideRequest()
	if (input?.uid !== undefined) result.setUid(input.uid)
	return result
}

export const mapDelViewOverrideRequestFromGrpcWeb = (input?: api_pb.DelViewOverrideRequest): ui_api_v1_types.DelViewOverrideRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.DelViewOverrideRequest = {
        uid: input.getUid(),
	}
	return result
}

export const mapGetViewOverridesRequestToGrpcWeb = (input?: ui_api_v1_types.GetViewOverridesRequest): api_pb.GetViewOverridesRequest | undefined => {
	if (!input) return
	const result = new api_pb.GetViewOverridesRequest()
	const tmpUserId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.userId);
    if (tmpUserId !== undefined) result.setUserid(tmpUserId)
	const tmpTenantId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.tenantId);
    if (tmpTenantId !== undefined) result.setTenantid(tmpTenantId)
	const tmpDomainId = platform_v1_query_mappers.mapMatchedStringValueToGrpcWeb(input?.domainId);
    if (tmpDomainId !== undefined) result.setDomainid(tmpDomainId)
	if (input?.viewId !== undefined) result.setViewid(input.viewId)
	if (input?.limit !== undefined) result.setLimit(input.limit)
	return result
}

export const mapGetViewOverridesRequestFromGrpcWeb = (input?: api_pb.GetViewOverridesRequest): ui_api_v1_types.GetViewOverridesRequest | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewOverridesRequest = {
        userId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getUserid()),
        tenantId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getTenantid()),
        domainId: platform_v1_query_mappers.mapMatchedStringValueFromGrpcWeb(input.getDomainid()),
        viewId: input.getViewid(),
        limit: input.getLimit(),
	}
	return result
}

export const mapGetViewOverridesResponseToGrpcWeb = (input?: ui_api_v1_types.GetViewOverridesResponse): api_pb.GetViewOverridesResponse | undefined => {
	if (!input) return
	const result = new api_pb.GetViewOverridesResponse()
	if (input?.viewOverrides !== undefined) {
		input.viewOverrides.forEach((x: ui_crud_v1_types.ViewOverride, i: number) => {
			result.addViewoverrides(ui_crud_v1_mappers.mapViewOverrideToGrpcWeb(x), i)
		})
    }
	return result
}

export const mapGetViewOverridesResponseFromGrpcWeb = (input?: api_pb.GetViewOverridesResponse): ui_api_v1_types.GetViewOverridesResponse | undefined => {
	if (!input) return
	const result: ui_api_v1_types.GetViewOverridesResponse = {

	}
    const viewOverridesList: Array<ui_crud_v1_types.ViewOverride> = []
	input.getViewoverridesList().forEach((x: any) => {
		const val = ui_crud_v1_mappers.mapViewOverrideFromGrpcWeb(x)
		if (val !== undefined) viewOverridesList.push(val)
	})
	result.viewOverrides = viewOverridesList

	return result
}

export const mapSchemaChangeTypeToGrpcWeb = (input?: ui_api_v1_types.SchemaChangeType): api_pb.SchemaChangeType | undefined => {
	if (input === undefined) return
	switch (input) {
		case ui_api_v1_types.SchemaChangeType.UNKNOWN_SCHEMA_CHANGE_TYPE: return api_pb.SchemaChangeType.UNKNOWN_SCHEMA_CHANGE_TYPE
		case ui_api_v1_types.SchemaChangeType.UPSERT: return api_pb.SchemaChangeType.UPSERT
		case ui_api_v1_types.SchemaChangeType.DELETE: return api_pb.SchemaChangeType.DELETE
	}
}

export const mapSchemaChangeTypeFromGrpcWeb = (input?: api_pb.SchemaChangeType): ui_api_v1_types.SchemaChangeType | undefined => {
	if (input === undefined) return
	switch (input) {
		case api_pb.SchemaChangeType.UNKNOWN_SCHEMA_CHANGE_TYPE: return ui_api_v1_types.SchemaChangeType.UNKNOWN_SCHEMA_CHANGE_TYPE
		case api_pb.SchemaChangeType.UPSERT: return ui_api_v1_types.SchemaChangeType.UPSERT
		case api_pb.SchemaChangeType.DELETE: return ui_api_v1_types.SchemaChangeType.DELETE
	}
}

