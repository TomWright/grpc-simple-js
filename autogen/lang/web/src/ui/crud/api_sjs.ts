// File auto-generated by protoc-gen-simple-js
import * as platform_v1_query from '../../platform/query/match_strategy_sjs'


export type Resource = {
    uid: string,
    name: string,
    userId: string,
    tenantId: string,
    domainId: string,
    resource: string,
    datasource: ui_crud_v1.Datasource,
    datasourceParamsCustom: ui_crud_v1.DatasourceParamsCustom,
    datasourceParamsElasticsearch: ui_crud_v1.DatasourceParamsElasticSearch,
    datasourceParamsGraphql: ui_crud_v1.DatasourceParamsGraphQL,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type CustomDataSourceRequest = {
    url: string,
    method: ui_crud_v1.Method,
    body: string,
    headers: Array<string>,
}

export type DatasourceParamsCustom = {
    datasource: ui_crud_v1.CustomDataSourceRequest,
}

export type DatasourceParamsElasticSearch = {
    index: string,
}

export type DatasourceParamsGraphQL = {
    schema: string,
    properties: string,
    depth: number,
}

export type List = {
    uid: string,
    name: string,
    resourceId: string,
    userId: string,
    tenantId: string,
    domainId: string,
    columns: Array<ui_crud_v1.ColumnsEntry>,
    ordering: Array<string>,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type Column = {
    title: string,
    template: string,
}

export type Filter = {
    uid: string,
    name: string,
    resourceId: string,
    userId: string,
    tenantId: string,
    domainId: string,
    query: string,
    sorting: Array<string>,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type Page = {
    uid: string,
    name: string,
    userId: string,
    tenantId: string,
    domainId: string,
    viewId: string,
    urls: Array<string>,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type View = {
    uid: string,
    name: string,
    userId: string,
    tenantId: string,
    domainId: string,
    template: string,
    plugins: Array<ui_crud_v1.PluginInstance>,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type PluginInstance = {
    uid: string,
    dependsOn: Array<string>,
    pluginId: string,
    data: string,
}

export type Plugin = {
    uid: string,
    name: string,
    userId: string,
    tenantId: string,
    domainId: string,
    template: string,
    createdAt: string,
    createdBy: string,
    updatedAt: string,
    updatedBy: string,
    deletedAt: string,
    deletedBy: string,
}

export type GetListsRequest = {
    resourceId: platform_v1_query.MatchedStringValue,
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    limit: number,
}

export type GetListsResponse = {
    lists: Array<ui_crud_v1.List>,
}

export type GetResourcesRequest = {
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    resource: string,
    limit: number,
}

export type GetResourcesResponse = {
    resources: Array<ui_crud_v1.Resource>,
}

export type GetFiltersRequest = {
    resourceId: platform_v1_query.MatchedStringValue,
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    limit: number,
}

export type GetFiltersResponse = {
    filters: Array<ui_crud_v1.Filter>,
}

export type GetPagesRequest = {
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    limit: number,
}

export type GetPagesResponse = {
    pages: Array<ui_crud_v1.Page>,
}

export type GetViewsRequest = {
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    limit: number,
}

export type GetViewsResponse = {
    views: Array<ui_crud_v1.View>,
}

export type GetPluginsRequest = {
    userId: platform_v1_query.MatchedStringValue,
    tenantId: platform_v1_query.MatchedStringValue,
    domainId: platform_v1_query.MatchedStringValue,
    limit: number,
}

export type GetPluginsResponse = {
    plugins: Array<ui_crud_v1.Plugin>,
}

